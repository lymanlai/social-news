
var path = require('path')
  , Resource = require('deployd/lib/resource')
  , fs = require('fs.extra')
  , formidable = require('formidable')
  , mmm = require('mmmagic')
  , Magic = mmm.Magic
  , magic = new Magic(mmm.MAGIC_MIME_TYPE)
  , util = require('util');

function AvatarResource() {
    Resource.apply(this, arguments);
}
util.inherits(AvatarResource, Resource);

AvatarResource.label = "Avatar";
AvatarResource.events = ["get", "post"];
AvatarResource.defaultPath = '/avatar'; 

module.exports = AvatarResource;


// AvatarResource.prototype.clientGeneration = true;

AvatarResource.prototype.handle = function (ctx, next) {
    if ( !ctx.req.internal && this.config.internalOnly ) {
      return ctx.done({ statusCode: 403, message: 'Forbidden' });
    }

    var parts = ctx.url.split('/').filter(function(p) { return p; })
        , fileUploadDir = path.join( __dirname, '../..', 'data', 'files' ) + '/'
        , res = ctx.res
        , self = this
        , result = {}
        , domain = {
            url: ctx.url
            , parts: parts
            , query: ctx.query
            , body: ctx.body
            , 'this': result
            , setResult: function(val) {
                result = val;
            }
          }
    ;

    if (ctx.method === "POST") {
      if( this.events.post ) {
        this.events.post.run(ctx, domain, function(err) {
          uploadAvatar();
        });
      } else {
        uploadAvatar();
      }
    } else if (ctx.method === "GET") {
        if( this.events.get ){
          this.events.get.run(ctx, domain, function(err) {
            outputAvatar();
          });
        }else{
          outputAvatar();
        }
    } else {
        next();
    }

  //function defined here!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    function uploadAvatar(){
      var form = new formidable.IncomingForm(),
          req = ctx.req,
          res = ctx.res,
          files = [],
          fileUploadDir = path.join( __dirname, '../..', 'data', 'files' ) + '/',
          fields = []
          , uid = ctx.session.data.uid
      ;

      if( !uid ){
        ctx.res.statusCode = 401;
        ctx.done('bad credentials');
      }

      form.parse(req).
        on('file', function(name, file) {
          
          var theDir = fileUploadDir + uid.substr(0,2) + '/' + uid.substr(2,2) + '/';
          fs.mkdirp( theDir, function(err){
            var newPath = theDir +  uid.substr(4);
            fs.rmrf( newPath, function(err){
              fs.move( file.path, newPath, function (err) {
                if (err) {
                  throw err;
                }
                ctx.done({ statusCode: 200, message: 'Upload avatar success' });
              });
            });
          });
        }).
        on('error', function(err) {
          ctx.done(err);
        });

      req.resume();
    }

    function outputAvatar(){
      var uid = ctx.url.substr(1);
      var theDir = fileUploadDir + uid.substr(0,2) + '/' + uid.substr(2,2) + '/';
      var fileName = theDir + uid.substr(4,12);

      fs.readFile(fileName,function(err, data){
        if( err ){
          fileName = fileUploadDir + 'default.png';
          fs.readFile(fileName,function(err, data){
            res.writeHead(200, {'Content-Type': 'image/png'});
            res.end(data);
          });
          return;
        }
        magic.detect(data, function(err, imgType) {
          if (err) throw err;
          res.writeHead(200, {'Content-Type': imgType});
          res.end(data);
        });
      });
    }   
};